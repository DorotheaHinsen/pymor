jobs:
- job: 'Windows_CI'
  pool:
    vmImage: 'windows-2019'
  timeoutInMinutes: 75
  variables:
      PYMOR_HYPOTHESIS_PROFILE: ci
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python39:
        python.version: '3.9'
    maxParallel: 4

  steps:
  - script: |
        curl -o D:\opengl32.dll.7z --retry 5 --retry-connrefused --retry-delay 30 -v https://pymor.github.io/dist/opengl32.dll.7z
    displayName: download OpenGL Library
  - task: ExtractFiles@1
    inputs:
        archiveFilePatterns: D:\opengl32.dll.7z
        destinationFolder: D:\tmp\
        cleanDestinationFolder: false
  - task: CopyFiles@2
    inputs:
        sourceFolder: D:\tmp\
        contents: 'opengl32.dll*'
        targetFolder: C:\Windows\SysWOW64\mesadrv.dll
        overWrite: true
  - script: |
        REG IMPORT .ci\azure\replace_opengl_imp.reg
    displayName: 'Install OpenGL Library'
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'python=$(python.version) numpy pip'
      installOptions: "-c conda-forge"
      updateConda: true
    displayName: Install conda base
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: pymor
      installOptions: "-c conda-forge --only-deps"
      updateConda: false
    displayName: Install pymor deps
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: pyevtk slycot cython pytest pytest-cov curl hypothesis pyqt
      installOptions: "-c conda-forge"
      updateConda: false
    displayName: Install extra packages
  - script: |
        call activate base
        pip install typer
        python -c "import numpy"
        python -c "import OpenGL.GL as gl; print(gl.glGetString(gl.GL_RENDERER)); print(gl.glGetString(gl.GL_VERSION))"
        python setup.py build_ext -i
        py.test --cov-context=test --junitxml=test_results.xml --cov=src/pymor --hypothesis-profile $(PYMOR_HYPOTHESIS_PROFILE)
    displayName: 'Tests'

  - script: |
      choco install codecov
      coverage xml
      codecov.exe -f coverage.xml
    displayName: 'Upload to codecov.io'
  - publish: src/pymortests/testdata/check_results/
    artifact: changed_results_win_$(python.version)
    condition: always()
