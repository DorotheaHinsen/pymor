{"name":"pyMOR","tagline":"Model Order Reduction with Python","body":"pyMOR - Model Order Reduction with Python\r\n=========================================\r\n\r\npyMOR is a software library developed at the University of MÃ¼nster for building\r\nmodel order reduction applications with the Python programming language.  Its\r\nmain focus lies on the reduction of parameterized partial differential\r\nequations using the reduced basis method.  All algorithms in pyMOR are\r\nformulated in terms of abstract interfaces for seamless integration with\r\nexternal high-dimensional PDE-solver. Moreover, pure Python implementations of\r\nfinite element and finite volume discretizations using the NumPy/SciPy\r\nscientific computing stack are provided for getting started quickly.\r\n\r\n**NOTE** pyMOR is still in early development.  Should you have any questions\r\nregarding pyMOR or wish to contribute, do not hesitate to contact us!\r\n\r\n[![Build Status](https://travis-ci.org/pymor/pymor.png?branch=master)](https://travis-ci.org/pymor/pymor)\r\n\r\n\r\nLicense\r\n-------\r\n\r\nCopyright (c) 2013, 2014, Rene Milk, Stephan Rave, Felix Schindler\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice, this\r\n  list of conditions and the following disclaimer.\r\n* Redistributions in binary form must reproduce the above copyright notice,\r\n  this list of conditions and the following disclaimer in the documentation\r\n  and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\r\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nDistribution Packages\r\n---------------------\r\n\r\nPackages for Ubuntu 12.04 and 13.10 are available via our\r\n[PPA](https://launchpad.net/~pymor/+archive/stable):\r\n\r\n    sudo apt-add-repository ppa:pymor/stable\r\n    sudo apt-get update\r\n    sudo apt-get install python-pymor\r\n\r\nDemo applications and documentation are packaged separately:\r\n\r\n    sudo apt-get install python-pymor-demos\r\n    sudo apt-get install python-pymor-doc\r\n\r\nThe latter makes a `pymor-demo` script available, which can be used to run\r\nall installed demos.\r\n\r\n\r\nInstallation into a virtualenv\r\n------------------------------\r\n\r\nWhen installing pyMOR manually, we recommend installation into a dedicated\r\nPython [virtualenv](http://www.virtualenv.org/). On Debian based systems,\r\ninstall virtualenv using\r\n\r\n    sudo apt-get install python-virtualenv\r\n\r\nOn Ubuntu systems, you may also wish to install pyMOR's dependencies \r\nsystem-wide using\r\n\r\n    sudo apt-add-repository ppa:pymor/stable\r\n    sudo apt-get update\r\n    sudo apt-get build-dep python-pymor\r\n\r\nThen create a new virtualenv and activate it:\r\n\r\n    virtualenv --system-site-packages $PATH_TO_VIRTUALENV\r\n    source $PATH_TO_VIRTUALENV/bin/activate\r\n\r\nThe `--system-site-packages` flag makes Python packages installed\r\nby your distribution available inside the virtualenv. If you do not wish\r\nthis behaviour, simply remove the flag.\r\n\r\nOn older distributions you will have to upgrade the distribute package.\r\nMoreover, if NumPy and Cython are not already available in the virtualenv,\r\nwe will have to install them manually. (Automatic dependency resolution\r\nvia pip fails for these packages. To build NumPy and, later, SciPy, you\r\nwill need to have Fortran as well as BLAS and LAPACK headers installed\r\non your system.)\r\n\r\n    pip install --upgrade distribute\r\n    pip install cython\r\n    pip install numpy\r\n\r\nFinally install pyMOR itself with all missing dependencies:\r\n\r\n    pip install pymor\r\n\r\nThe installation script might recommend the installation of additional\r\npackages. (This is easy to miss, as pip will install dependencies after\r\npyMOR itself has been installed, so search at the top of your console\r\nlog!) You will most likely want to install [IPython](http://www.ipython.org)\r\nand, in particular, [matplotlib](http://matplotlib.org),\r\n[PyOpenGL](http://pyopengl.sourceforge.net/),\r\n[glumpy](https://code.google.com/p/glumpy/),\r\nand [PySide](http://qt-project.org/wiki/PySide). The latter\r\npackages are required for pyMOR's visualization routines. At the time\r\nof writing, PySide fails to install with current Sphinx versions, so we\r\nhave to install an old one:\r\n\r\n    pip install \"sphinx==1.1.3\"\r\n    pip install ipython pyside matplotlib pyopengl glumpy \r\n\r\n\r\nDocumentation\r\n-------------\r\n\r\nDocumentation is available online at [Read the Docs](http://pymor.readthedocs.org/)\r\nor offline in the `python-pymor-doc` package.\r\n\r\nTo build the documentation yourself, execute\r\n\r\n    make doc\r\n    \r\ninside the root directory of the pyMOR source tree. This will generate HTML\r\ndocumentation in `docs/_build/html`.\r\n\r\n\r\nSetting up an Environment for pyMOR Development\r\n-----------------------------------------------\r\n\r\nIf you want to modify (or extend!) pyMOR itself, we recommend to setup a\r\nvirtualenv for development (see above). The virtualenv should have all\r\ndependencies of pyMOR available. On Ubuntu machines, you can simply install\r\npyMOR from our PPA and then create an empty virtualenv with system\r\nsite-packages enabled. Otherwise, follow the above instructions for installing\r\npyMOR inside a virtualenv. However, pyMOR itself should not be installed inside\r\nthe virtualenv. If it is, use\r\n\r\n    pip uninstall pymor\r\n\r\nto remove it. Then, clone the pyMOR git repository using\r\n\r\n    git clone https://github.com/pymor/pymor $PYMOR_SOURCE_DIR\r\n    cd $PYMOR_SOURCE_DIR\r\n\r\nand, optionally, switch to the branch you are interested in, e.g.\r\n\r\n    git checkout 0.2.x\r\n\r\nFinally add pyMOR to the path of your virtualenv:\r\n\r\n    echo \"$PYMOR_SOURCE_DIR\" > $VIRTUAL_ENV/lib/python2.7/site-packages/pymor.pth\r\n\r\nThis will make pyMOR importable inside the virtualenv and will override any\r\nother pyMOR versions installed on the system.\r\n\r\n\r\nCython extension modules\r\n------------------------\r\n\r\npyMOR uses [Cython](http://www.cython.org/) extension modules to speed up\r\nnumerical algorithms which cannot be efficiently expressed using NumPy idioms.\r\nTo benefit from these optimizations, the modules' source files (currently\r\n`pymor/tools/inplace.pyx` and `pymor/tools/realations.pyx`) have to be processed\r\nby Cython into a `.c`-file which then must be compiled into a shared object.\r\nThese `.so`-files then take precedence over the non-optimized pure python\r\nmodules. The whole build process is handeled automatically by `setup.py`.\r\n\r\nIf you want to develop Cython extensions modules for pyMOR yourself, you should\r\nadd your module to the `ext_modules` list defined in the `_setup` method of\r\n`setup.py`. Calling\r\n\r\n    python setup.py build_ext --inplace\r\n\r\nwill then build the extension module and place it into your pyMOR source tree.\r\n\r\n\r\nTests\r\n-----\r\n\r\npyMOR uses [pytest](http://pytest.org/) for unit testing. To run the test suite,\r\nsimply execute `make test` in the base directory of the pyMOR repository. This\r\nwill also create a test coverage report which can be found in the `htmlcov`\r\ndirectory. Alternatively, you can run `make full-test` which will also enable\r\n[pyflakes](https://pypi.python.org/pypi/pyflakes) and\r\n[pep8](http://www.python.org/dev/peps/pep-0008/) checks.\r\n\r\nAll tests are contained within the `src/pymortests` directory and can be run\r\nindividually by executing `py.test src/pymortests/the_module.py`.\r\n\r\n\r\nContact\r\n-------\r\n\r\nShould you have any questions regarding pyMOR or wish to contribute, \r\ndo not hestitate to contact us via our development mailing list:\r\n\r\n<http://listserv.uni-muenster.de/mailman/listinfo/pymor-dev>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}